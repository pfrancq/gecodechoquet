QUICK BUILD
-----------
1) How-to build (command-line):
- create a build directory (by exemple /path/to/gecodechoquet/build)
- cd /path/to/gecodechoquet/build
- cmake .. [OPTIONS]
- make or make VERBOSE=1
- sudo make install
- sudo make uninstall (if you want to remove it ...)

After first installation, it's recommended to run `sudo ldconfig` to update the library lookup cache

2) How-to build (Ecplise):
before the first build:
- create a build directory (by exemple /path/to/gecodechoquet/build, and for Eclipse correct work, this place is very great)
- cd /path/to/gecodechoquet/build
- cmake .. [OPTIONS]
- update Eclipse C++ project options:
	--> C/C++ Build (click on title)
		-> builder settings tab
		-> disable 'use the default build command' (untick checkbox)
		-> fill the 'build command' text field with 'make -C ${project_loc}/build VERBOSE=1'
	--> C/C++ Build (click on title)
		---> Settings
			-> enable the good parser on the 'binary parsers' tab (ELF related for Linux)
- configure a target for all in Ecplise

anytime after
- build the project ...
- make install
- make uninstall (if you want again ...)

(see http://www.cmake.org/Wiki/CMake:Eclipse for more informations)

USE WITHOUT TO INSTALL
-----------------------
It is possible to use gecodechoquet without to install it. For that, an environment variable 'GECODECHOQUET_LIB' must be defined.
This can be done, for example, by adding the following line in .bashrc
      export GECODECHOQUET_LIB=/home/mylogin/prj/gecodechoquet

ABOUT OPTIONS (when running cmake)
-----------------------------------
In CMake, options are in the form -D<option_name>=<option_value>, where <option_name> (case sensitive) and <option_value> are mandatory.
When you set a value, it's stored in cache, until you provide a new value.

So if you first configure with
cmake .. -DCMAKE_BUILD_TYPE=Debugfull
the first time, the project will be build with debug informations.  Future cmake invocation without paramater (like cmake ..)
still prepare configuration for debug.  You need to set one time the new value for the configuration to update this setting
cmake .. -DCMAKE_BUILD_TYPE=Release
And again, until you didn't say it, cmake will keep this setting.

This is false if you remove the content of your build directory (you must past again your options)...

AVAILABLE OPTIONS (when running cmake)
--------------------------------------
The available options are (also cmake options are still available), and don't forget to use -D<option_name>=<option_value>:

CMAKE_INSTALL_PREFIX=/path/to/install/top/dir -> where to install files
CMAKE_BUILD_TYPE=<Debug|Release> -> where original default is Release

iconv-library=/path/to/libiconv.so -> where to find iconv library if not in standard library path
iconv-include=/path/to/libiconv_includes -> where to find iconv includes if not in standard include path

disable-mysql=<true|false> -> Disable mysql support (by default, mysql support is enabled [false])
mysql-library=/path/to/libmysqlclient.so -> where to find mysql client library if not in standard library path
mysql-include=/path/to/libmysqlclient_includes -> where to find mysql client includes if not in standard include path

curl-library=/path/to/libcurl.so -> where to find curl library if not in standard library path
curl-include=/path/to/libcurl_includes -> where to find curl includes if not in standard include path

disable-kde=<true|false> -> Disable kde 3 support (by default, kde support is enabled [false])
rcmake-verbose=<true|false> -> Enable verbose output during cmake run (by default, verbose output is disabled [true], useful for debug of cmake scripts)

disable-rmath=<true|false> -> Disable rmath library construction (by default, rmath library is enabled [false])
disable-roptimization=<true|false> -> Disable roptimization library construction (by default, roptimization library is enabled [false])

ABOUT INSTALLATION
------------------
When make install is performed, some files are installed:
- gecodechoquetmacro.cmake is installed in ${install_prefix}/share/gecodechoquet
- include files are installed in ${install_prefix}/include/gecodechoquet without subdirectory (all includes in the galilei dir)
- library files and libtool archives are installed in ${install_prefix}/lib

Also when installing, a relinking is done for libraries.  And after first installation, is recommend to run ldconfig to update library cache.

OTHER
-----
For CMake Editor Ecplise plugin see CMake website (usefull integration http://cmakeed.sourceforge.net/updates/)
For other information, see CMake wiki http://www.cmake.org/Wiki/CMake

AUTHOR
------
Pascal Francq - pascal@francq.info
